version: "3.5"
services:
    db:
        container_name: db
        image: mariadb:10.5.16
        restart: always
        command: --default-authentication-plugin=mysql_native_password
        environment:
            MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
            MYSQL_USER: ${DATABASE_USER}
            MYSQL_PASSWORD: ${DATABASE_PASSWORD}
            MYSQL_DATABASE: ${DATABASE_DBNAME}
        volumes:
            - ./mysql/setup.sql:/docker-entrypoint-initdb.d/setup.sql
            - ./volumes/db/data:/var/lib/mysql
    api:
        container_name: api
        build: ./api
        restart: always
        environment:
            ENVIRONMENT: ${ENVIRONMENT}
            DATABASE_USER: ${DATABASE_USER}
            DATABASE_PASSWORD: ${DATABASE_PASSWORD}
            DATABASE_DBNAME: ${DATABASE_DBNAME}
            API_KEY: ${API_KEY}
            API_AUTHORIZED_DISCORD_IDS: ${API_AUTHORIZED_DISCORD_IDS}
            API_DISCORD_CLIENT_ID: ${API_DISCORD_CLIENT_ID}
            API_DISCORD_CLIENT_SECRET: ${API_DISCORD_CLIENT_SECRET}
            API_DISCORD_REDIRECT_URI: ${API_DISCORD_REDIRECT_URI}
            API_FRONTEND_URL: ${API_FRONTEND_URL}
            API_SESSION_SECRET: ${API_SESSION_SECRET}
            API_TWOFA_KEY: ${API_TWOFA_KEY}
            API_COOKIE_DOMAIN: ${API_COOKIE_DOMAIN}
            API_COOKIE_PATH: ${API_COOKIE_PATH}
            BOT_TOKEN: ${BOT_TOKEN}
            BOT_GUILD_ID: ${BOT_GUILD_ID}
        depends_on:
            - db
        volumes:
            - ./api:/app
    bot:
        container_name: bot
        build: ./bot
        restart: always
        environment:
            ENVIRONMENT: ${ENVIRONMENT}
            API_KEY: ${API_KEY}
            BOT_TOKEN: ${BOT_TOKEN}
            BOT_GUILD_ID: ${BOT_GUILD_ID}
            BOT_PREFIX: ${BOT_PREFIX}
        depends_on:
            - db
            - api
        volumes:
            - ./bot:/app
    client:
        container_name: client
        build: ./client
        restart: always
        ports:
            - 8080:8080
        volumes:
            - ./client/dist:/usr/share/nginx/html
            - ./client/log/nginx:/var/log/nginx
        depends_on:
            - api
            - bot
    report:
        container_name: report
        build: ./report
        restart: always
        ports:
            - 8082:8082
        volumes:
            - ./report/dist:/usr/share/nginx/html
            - ./report/log/nginx:/var/log/nginx
            - ./report/conf/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
            - ./report/conf/nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./report/conf/modsec:/etc/nginx/modsec
            - ./report/conf/owasp/crs-setup.conf:/usr/local/owasp-modsecurity-crs/crs-setup.conf
        depends_on:
            - api
